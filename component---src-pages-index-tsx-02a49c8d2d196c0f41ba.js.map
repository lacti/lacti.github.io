{"version":3,"sources":["webpack:///./src/components/PostDate.tsx","webpack:///./src/utils/tag.ts","webpack:///./src/components/Tag.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostItem.tsx","webpack:///./src/components/PostList.tsx"],"names":["StyledDate","PostDate","date","encodeTagForURL","tag","StyledContainer","Tag","to","IndexPage","edges","data","allMarkdownRemark","items","filter","edge","node","frontmatter","permalink","map","excerpt","fields","slug","title","tags","StyledTitle","StyledTagsContainer","StyledExcerpt","PostItem","key","StyledList","PostList","item"],"mappings":"mIAGA,IAAMA,EAAa,oBAAH,sCAAG,CAAH,+GAgBDC,IAJ2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxC,YAACF,EAAD,KAAaE,K,0EChBFC,EAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,MACH,MAAO,YACT,IAAK,KACH,MAAO,SACT,QACE,OAAOA,I,YCFb,IAAMC,EAAkB,mBAAH,4CAAG,CAAH,kIAkBNC,IANiB,SAAC,GAAD,IAAGF,EAAH,EAAGA,IAAH,OAC9B,YAACC,EAAD,KACE,YAAC,IAAD,CAAME,GAAE,QAAUJ,EAAgBC,GAA1B,KAAoCA,M,kCCnBhD,iFAsDeI,UA1B6B,SAAC,GAAD,IAEnBC,EAFmB,EAC1CC,KACEC,kBAAqBF,MAFmB,OAK1C,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEG,MAAOH,EACJI,QAAO,SAAAC,GAAI,OAAKA,EAAKC,KAAKC,YAAYC,aACtCC,KACC,oBACEH,KACEI,EAFJ,EAEIA,QAFJ,IAGIC,OAAUC,EAHd,EAGcA,KAAMnB,EAHpB,EAGoBA,KAHpB,IAIIc,YAJJ,MAMO,CAAEG,UAASE,OAAMnB,OAAMoB,MAN9B,EAImBA,MAEkBC,KANrC,EAI0BA,gB,0HCtCxC,IAAMlB,EAAkB,kBAAH,4CAAG,CAAH,8CAIfmB,EAAc,kBAAH,wCAAG,CAAH,yGASXC,EAAsB,mBAAH,gDAAG,CAAH,6CAInBC,EAAgB,iBAAH,0CAAG,CAAH,gDAmCJC,EAvB2B,SAAC,GAAD,IACxCR,EADwC,EACxCA,QACAE,EAFwC,EAExCA,KACAC,EAHwC,EAGxCA,MACApB,EAJwC,EAIxCA,KACAqB,EALwC,EAKxCA,KALwC,OAOxC,YAAClB,EAAD,KACE,YAACmB,EAAD,KACE,YAAC,IAAD,CAAMjB,GAAIc,EAAMC,MAAOH,GACpBG,IAGL,YAACG,EAAD,KACE,YAACxB,EAAA,EAAD,CAAUC,KAAMA,IACfqB,EAAKL,KAAI,SAAAd,GAAG,OACX,YAACE,EAAA,EAAD,CAAKsB,IAAKxB,EAAKA,IAAKA,QAGxB,YAACsB,EAAD,KAAgBP,KClDpB,IAAMU,EAAa,kBAAH,uCAAG,CAAH,4DAcDC,IARwC,SAAC,GAAD,IAAGlB,EAAH,EAAGA,MAAH,OACrD,YAACiB,EAAD,KACGjB,EAAMM,KAAI,SAAAa,GAAI,OACb,YAAC,EAAD,aAAUH,IAAKG,EAAKV,MAAUU","file":"component---src-pages-index-tsx-02a49c8d2d196c0f41ba.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledDate = styled.span`\n  display: inline-block;\n  font-size: 1rem;\n  font-weight: 500;\n  display: inline-block;\n  margin: 4px;\n`;\n\nexport interface PostDateProps {\n  date: string;\n}\n\nconst PostDate: React.FC<PostDateProps> = ({ date }) => (\n  <StyledDate>{date}</StyledDate>\n);\n\nexport default PostDate;\n","export const encodeTagForURL = (tag: string) => {\n  switch (tag) {\n    case \"c++\":\n      return \"cplusplus\";\n    case \"c#\":\n      return \"csharp\";\n    default:\n      return tag;\n  }\n};\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport { encodeTagForURL } from \"../utils/tag\";\n\nconst StyledContainer = styled.div`\n  display: inline-block;\n  padding: 4px 8px;\n  margin: 4px 4px 4px 4px;\n  border-radius: 8px;\n  background-color: #f1f1f1;\n`;\n\ninterface TagProps {\n  tag: string;\n}\n\nconst Tag: React.FC<TagProps> = ({ tag }) => (\n  <StyledContainer>\n    <Link to={`/tag/${encodeTagForURL(tag)}/`}>{tag}</Link>\n  </StyledContainer>\n);\n\nexport default Tag;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Page from \"../components/Page\";\nimport Container from \"../components/Container\";\nimport IndexLayout from \"../layouts\";\nimport PostList from \"../components/PostList\";\n\ninterface IndexPageProps {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string;\n          fields: {\n            slug: string;\n            date: string;\n          };\n          frontmatter: {\n            title: string;\n            tags: string[];\n            permalink: string;\n          };\n        };\n      }[];\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexPageProps> = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <PostList\n          items={edges\n            .filter(edge => !edge.node.frontmatter.permalink)\n            .map(\n              ({\n                node: {\n                  excerpt,\n                  fields: { slug, date },\n                  frontmatter: { title, tags }\n                }\n              }) => ({ excerpt, slug, date, title, tags })\n            )}\n        />\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [fields___date] }\n      limit: 2000\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 240)\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          frontmatter {\n            title\n            tags\n            permalink\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport Tag from \"./Tag\";\nimport PostDate from \"./PostDate\";\n\nconst StyledContainer = styled.li`\n  margin-bottom: 2rem;\n`;\n\nconst StyledTitle = styled.h1`\n  font-size: 1.8rem;\n  margin-bottom: 6px;\n  color: blue;\n  [\"& a\"]: {\n    text-decoration: none;\n  }\n`;\n\nconst StyledTagsContainer = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst StyledExcerpt = styled.p`\n  word-break: break-all;\n`;\n\nexport interface PostItemProps {\n  excerpt: string;\n  slug: string;\n  date: string;\n  title: string;\n  tags: string[];\n}\n\nconst PostItem: React.FC<PostItemProps> = ({\n  excerpt,\n  slug,\n  title,\n  date,\n  tags\n}) => (\n  <StyledContainer>\n    <StyledTitle>\n      <Link to={slug} title={excerpt}>\n        {title}\n      </Link>\n    </StyledTitle>\n    <StyledTagsContainer>\n      <PostDate date={date} />\n      {tags.map(tag => (\n        <Tag key={tag} tag={tag} />\n      ))}\n    </StyledTagsContainer>\n    <StyledExcerpt>{excerpt}</StyledExcerpt>\n  </StyledContainer>\n);\n\nexport default PostItem;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PostItem, { PostItemProps } from \"./PostItem\";\n\nconst StyledList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst PostList: React.FC<{ items: PostItemProps[] }> = ({ items }) => (\n  <StyledList>\n    {items.map(item => (\n      <PostItem key={item.slug} {...item} />\n    ))}\n  </StyledList>\n);\n\nexport default PostList;\n"],"sourceRoot":""}