{"componentChunkName":"component---src-templates-page-tsx","path":"/2012/11/30/ctags-cscope-with-vim/","webpackCompilationHash":"86a6406c6b4e5482e871","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p>시스템 프로그래밍 수업 듣는 친구들이 vim을 써서 보다 빠르게 커널 탐색을 하는데 도움이 되었으면 해서 쓰는 글이지만 본인이 직접 정리하기는 귀찮으니 다음의 링크를 참조 바람 […]</p>\n<ul>\n<li><a href=\"https://sosal.tistory.com/11\">so_sal: 커널 분석기 Vi + ctags + cscope</a></li>\n</ul>\n<h3>search script</h3>\n<p>추가로, 여러 파일에서 특정 내용을 찾는 좋은 shell script</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"bash\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">#!/bin/bash</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;- find --------&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">$1</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;---------------&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">echo</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">find </span><span class=\"mtk11\">.</span><span class=\"mtk1\"> -name </span><span class=\"mtk8\">&quot;*.[chS]&quot;</span><span class=\"mtk1\"> -exec grep -Hn </span><span class=\"mtk12\">$1</span><span class=\"mtk1\"> {} </span><span class=\"mtk6\">\\;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">find </span><span class=\"mtk11\">.</span><span class=\"mtk1\"> -name </span><span class=\"mtk8\">&quot;Make*&quot;</span><span class=\"mtk1\"> -exec grep -Hn </span><span class=\"mtk12\">$1</span><span class=\"mtk1\"> {} </span><span class=\"mtk6\">\\;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">find </span><span class=\"mtk11\">.</span><span class=\"mtk1\"> -name </span><span class=\"mtk8\">&quot;*.inc&quot;</span><span class=\"mtk1\"> -exec grep -Hn </span><span class=\"mtk12\">$1</span><span class=\"mtk1\"> {} </span><span class=\"mtk6\">\\;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">echo</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;---------------&quot;</span></span></code></pre>\n<p>확장자가 c, h, S, inc 이거나 Make* 파일에 대해서 지정된 검색어가 있는지 검사한다.\n<code>./search proc</code> 라고 치면 proc가 들어있는 파일들을 검색함.</p>\n<h3>vim + ctags 대충 요약</h3>\n<p>커널 소스 디렉토리에서 <code>ctags -R</code> 을 해서 tags 파일을 만든 뒤, 대충 .vimrc 파일에 다음을 추가하자. (vim이 열리는 위치마다 tags 파일을 만들면 귀찮으니 절대 경로로 tags 파일 경로를 지정해주는 것도 좋다.)</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"bash\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk11\">set</span><span class=\"mtk1\"> dictionary=./tags,/usr/include/tags</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">&quot;=============== ctags setting =================</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">set tags=./tags,/usr/include/tags</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">if version &gt;= 500</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        func! Sts( )</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">                let st = expand(&quot;</span><span class=\"mtk1\">&lt;cword&gt;</span><span class=\"mtk8\">&quot;)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">                exe &quot;</span><span class=\"mtk1\">sts </span><span class=\"mtk8\">&quot;.st</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        endfunc</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        nmap ,st :call Sts( )&lt;cr&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        func! Tj( )</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">                let st = expand(&quot;</span><span class=\"mtk1\">&lt;cword&gt;</span><span class=\"mtk8\">&quot;)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">                exe &quot;</span><span class=\"mtk1\">tj </span><span class=\"mtk8\">&quot;.st</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        endfunc</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        nmap ,tj :call Tj( )&lt;cr&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">endif</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">=============== man setting =================</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">func! Man( )</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">let</span><span class=\"mtk1\"> sm = expand(</span><span class=\"mtk8\">&quot;&lt;cword&gt;&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    exe </span><span class=\"mtk8\">&quot;!manc &quot;</span><span class=\"mtk1\">.sm</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">endfunc</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">nmap K :call Man( )&lt;cr&gt;&lt;cr&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">&quot;============= search setting ================</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">func! SearchKeyword()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        let sm = expand(&quot;</span><span class=\"mtk1\">&lt;cword&gt;</span><span class=\"mtk8\">&quot;)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">        exe &quot;</span><span class=\"mtk1\">!search </span><span class=\"mtk8\">&quot;.sm</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">endfunc</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">nmap J :call SearchKeyword()&lt;cr&gt;</span></span></code></pre>\n<p>이제 <code>,st</code> <code>,tj</code> 명령어로 tag jump가 가능한데 목록을 listing해서 창 분할해서 뛸거냐 아니면 현재 창에서 바로 이동할거냐를 고를 수 있다. (개인적으로는 창 분할해서 이동하는 <code>,st</code> 을 더 많이 썼다.)</p>\n<p>그리고 manpages-dev를 설치했을 때, <code>K</code>를 누르면 해당 함수에 대한 manual을 바로 볼 수도 있고, 위에서 만들어놓은 search script와 연동해서 <code>J</code>를 누르면 해당 문자열 혹은 심볼을 포함한 파일들을 검색할 수도 있다.</p>\n<p>cscope는 실행해보면 대충 알 수 있으니 잘 써보면 된다.</p>\n<style class=\"vscode-highlight-styles\">:root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n.default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.default-dark .mtk1 { color: #D4D4D4; }\n.default-dark .mtk2 { color: #1E1E1E; }\n.default-dark .mtk3 { color: #6A9955; }\n.default-dark .mtk4 { color: #569CD6; }\n.default-dark .mtk5 { color: #D16969; }\n.default-dark .mtk6 { color: #D7BA7D; }\n.default-dark .mtk7 { color: #B5CEA8; }\n.default-dark .mtk8 { color: #CE9178; }\n.default-dark .mtk9 { color: #646695; }\n.default-dark .mtk10 { color: #4EC9B0; }\n.default-dark .mtk11 { color: #DCDCAA; }\n.default-dark .mtk12 { color: #9CDCFE; }\n.default-dark .mtk13 { color: #000080; }\n.default-dark .mtk14 { color: #F44747; }\n.default-dark .mtk15 { color: #C586C0; }\n.default-dark .mtk16 { color: #6796E6; }\n.default-dark .mtk17 { color: #808080; }\n.default-dark .mtki { font-style: italic; }\n.default-dark .mtkb { font-weight: bold; }\n.default-dark .mtku { text-decoration: underline; text-underline-position: under; }</style>","excerpt":"시스템 프로그래밍 수업 듣는 친구들이 vim을 써서 보다 빠르게 커널 탐색을 하는데 도움이 되었으면 해서 쓰는 글이지만 본인이 직접 정리하기는 귀찮으니 다음의 링크를 참조 바람 … so_sal: 커널 분석기 Vi + ctags + cscope…","fields":{"date":"November 30, 2012","shortdesc":""},"frontmatter":{"title":"ctags, cscope 설정 등 vim을 잘 써보자","tags":["tool"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2012/11/30/ctags-cscope-with-vim/"}}}