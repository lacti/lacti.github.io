{"componentChunkName":"component---src-templates-page-tsx","path":"/2010/12/24/cpp-stl-fault/","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p>어제 나를 1시간동안 고민하게 한 코드는 다음과 같다.</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"cpp\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CMyData</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">GetKey</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> { </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> m_nKey; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">CMyData</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ~</span><span class=\"mtk11\">CMyData</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">private:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> m_nKey;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">std</span><span class=\"mtk1\">::list&lt;CMyData&gt; gCache;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk10\">BOOL</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Find</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk10\">list</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">CMyData</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">list</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">key</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">std</span><span class=\"mtk1\">::</span><span class=\"mtk10\">list</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">CMyData</span><span class=\"mtk1\">&gt;::iterator iterator = </span><span class=\"mtk12\">gCache</span><span class=\"mtk1\">.</span><span class=\"mtk11\">begin</span><span class=\"mtk1\"> ();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        iterator &lt; </span><span class=\"mtk12\">gCache</span><span class=\"mtk1\">.</span><span class=\"mtk11\">end</span><span class=\"mtk1\"> (); ++iterator) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">iterator</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">GetKey</span><span class=\"mtk1\"> () == key) </span><span class=\"mtk12\">list</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push_back</span><span class=\"mtk1\"> (list);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">list</span><span class=\"mtk1\">.</span><span class=\"mtk11\">size</span><span class=\"mtk1\"> () != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>어제 정신이 없었다고 변명을 해도 너무 어이없는 실수를 저질렀는데 더 큰 문제는 컴파일에서 뱉어주는 에러를 보고도 해당 문제를 파악하지 못했다는 것이다.</p>\n<p>위 코드의 문제는</p>\n<ul>\n<li>나는 OOP 수업의 영향으로 class declaration에서 public - protected - private 순으로 선언을 하고, public method를 선언할 때 가장 마지막 부분에 생성자 소멸자를 선언한다. <strong>그런데 class 선언할 때 맨 앞에 public을 빼먹었다.</strong></li>\n</ul>\n<p><code>GetKey()</code> 접근 위반 에러를 먼저 봤다면 괜찮았을텐데, <code>std::list</code> 쪽에서 <code>CMyData</code>의 소멸자를 호출하지 못한다는 에러만 보고 <em>소멸자 제대로 선언했는데!</em>를 외쳤으나 <code>public:</code>이 빠진건 보지 못했다.</p>\n<ul>\n<li>stl container의 iterator를 사용할 때는 <code>begin</code>으로부터 시작해서 <code>end</code>가 아닐 때까지 반복하는거다. 그래서 당연히 <code>iterator != list.end();</code>으로 써야하는데 대체 무슨 정신으로 저기에다가 <code>operator &#x3C;</code>를 써놨는지 모르겠다.</li>\n</ul>\n<p>결론은 술먹고 코딩하는 것보다 졸면서 코딩하는게 100만배는 더 해롭다는 사실.<br>\n저거 잡는데 1시간 반정도가 걸렸는데, 사실 잠 깨는데 1시간 걸리고 30분 동안 내가 졸면서 뭘 짜고 있었는지 파악하는게 걸린것 같다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .mtk4 { color: #569CD6; }\n  .default-dark .mtk1 { color: #D4D4D4; }\n  .default-dark .mtk10 { color: #4EC9B0; }\n  .default-dark .mtk11 { color: #DCDCAA; }\n  .default-dark .mtk15 { color: #C586C0; }\n  .default-dark .mtk12 { color: #9CDCFE; }\n  .default-dark .mtk7 { color: #B5CEA8; }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","excerpt":"어제 나를 1시간동안 고민하게 한 코드는 다음과 같다. 어제 정신이 없었다고 변명을 해도 너무 어이없는 실수를 저질렀는데 더 큰 문제는 컴파일에서 뱉어주는 에러를 보고도 해당 문제를 파악하지 못했다는 것이다. 위 코드의 문제는 나는 OOP…","fields":{"date":"December 24, 2010","shortdesc":"","slug":"/2010/12/24/cpp-stl-fault/"},"frontmatter":{"title":"stl operator 실수","tags":["c++"]}}},"pageContext":{"slug":"/2010/12/24/cpp-stl-fault/","older":{"slug":"/2010/12/21/debian-db-recovery/","title":"debian 계열 db 덮어쓸 때 주의점"},"newer":{"slug":"/2010/12/24/cpp-class-memset-fault/","title":"class와 memset"}}},"staticQueryHashes":["848695393"]}