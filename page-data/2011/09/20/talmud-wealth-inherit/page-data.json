{"componentChunkName":"component---src-templates-page-tsx","path":"/2011/09/20/talmud-wealth-inherit/","webpackCompilationHash":"cdfa71eb19fc14d91b48","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p>탈무드에는 다음과 같은 이야기가 있다.</p>\n<blockquote>\n<p>예루살렘에서 멀리 떨어진 곳에 어진 유태인이 살고 있었다. 그는 아들을 예루살렘에 있는 학교에 보냈다. 아들이 학교에서 공부하고 있는 사이에 아버지는 병이 들었다. 병세는 점점 깊어져 아무래도 아들을 만날 수 없으리라고 생각된 아버지는 유서를 썼다. 내용은 ‘전 재산을 한 노예에게 줄 것, 다만 재산 중에서 하나만 아들이 원하는 것을 아들에게 주라’는 내용이었다. 그 아버지가 죽자 노예는 그 아들에게 부친이 죽은 것을 알리고, 유서를 보여 주었다.</p>\n<p>이렇게 시작해서 노예의 재산은 결국 주인의 재산이므로 아들은 재산으로 노예를 선택했고 아버지가 남긴 유산도 얻을수 있었다.</p>\n</blockquote>\n<p>프로그래밍적으로 접근해보자.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Person</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Container</span><span class=\"mtk1\"> {};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Wealth</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Container</span><span class=\"mtk1\"> {};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Owned</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Attribute</span><span class=\"mtk1\"> {};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Owner</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Attribute</span><span class=\"mtk1\"> {};</span></span></code></pre>\n<p>사람과 재산은 여러 속성을 띌 수 있으므로 하나의 <code>Container</code>라 할 수 있다.\n그리고 소유 관계를 표현하기 위한 <code>Owned</code>, <code>Owner</code>는 각각 속성이라 할 수 있다.</p>\n<p>이 집에는 아버지, 아들, 노예가 있다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">PersonRef father, son, slave;</span></span></code></pre>\n<p>저 객체들은 어떻게든 태어나서, 여지껏 자신의 상태를 잘 관리하며 살아왔을 것이다. 각자는 자신의 삶을 독립적으로 살아가므로 하나의 Agent로 봐도 되겠다.</p>\n<p>여기서 아들은 공부를 위해 먼 곳으로 떠났다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk11\">GoStudy</span><span class=\"mtk1\">(son);</span></span></code></pre>\n<p>그런데 저 함수는 굉장히 복잡하기 때문에, <code>son</code> 객체는 저 함수의 수행을 완료할 때까지 상당한 시간을 소모할 것이다.</p>\n<p>아버지는 상당한 재산을 가지고 있었다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">WealthRef wealth;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">wealth-&gt;GetAttribute&lt;Owner&gt;()-&gt;</span><span class=\"mtk11\">SetOwner</span><span class=\"mtk1\">(father);</span></span></code></pre>\n<p>하지만 아버지에게 위기가 찾아왔다. 아버지 객체의 생존 시간이 다 된 것이다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk11\">dieAndDestroy</span><span class=\"mtk1\">(father);</span></span></code></pre>\n<p>아버지는 저 함수의 수행이 끝나면 자신이 완전히 소멸된다는 점을 잘 알고 있다.</p>\n<p>자신이 걱정하는 바는, 아들 객체가 <code>GoStudy</code> 수행이 끝나기 전에 자신의 <code>dieAndDestroy</code> 함수 수행이 완료될 것이라는 점이다. 그렇게 되면, 자신 객체는 모든 참조를 잃게 되고, 자신이 소유한 재산들은 모두 소유권이 사라지게 될 것이다.</p>\n<p>왜냐하면 dieAndDestroy 함수는 자신이 소유한 모든 재산들의 소유권을 NULL로 만들기 때문이다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">OwnedList&amp; ownedList = father-&gt;GetAttribute&lt;Owned&gt;()-&gt;</span><span class=\"mtk11\">List</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">std::</span><span class=\"mtk11\">foreach</span><span class=\"mtk1\">(ownedList.</span><span class=\"mtk11\">begin</span><span class=\"mtk1\">(); ownedList.</span><span class=\"mtk11\">end</span><span class=\"mtk1\">(); [=] (Owned* owned) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">owned</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">SetOwner</span><span class=\"mtk1\">(</span><span class=\"mtk4\">NULL</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span></code></pre>\n<p>그러면 자신의 소유물 중 하나인 노예가 모든 소유 권한이 없어진 틈을 타서, 아들이 돌아오기 전에 모든 소유권을 자신에게 돌리게 될 것이다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">OwnedList&amp; ownedList = slave-&gt;GetAttribute&lt;Owner&gt;()-&gt;GetAttribute&lt;Owned&gt;()-&gt;</span><span class=\"mtk11\">List</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">std::</span><span class=\"mtk11\">foreach</span><span class=\"mtk1\">(ownedList.</span><span class=\"mtk11\">begin</span><span class=\"mtk1\">(); ownedList.</span><span class=\"mtk11\">end</span><span class=\"mtk1\">(); [&amp;slave] (Owned* owned) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">owned</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">SetOwner</span><span class=\"mtk1\">(slave);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span></code></pre>\n<p>그래서 아버지는 현명하게도 자신의 정보를 유지할 방법으로 유서라는 객체를 만들었다. 유서라는 객체는 2개의 수행으로 나누어진다.</p>\n<ul>\n<li><strong>전 재산의 소유권을 노예에게 이전한다.</strong></li>\n</ul>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">OwnedList&amp; ownedList = father-&gt;GetAttribute&lt;Owned&gt;()-&gt;</span><span class=\"mtk11\">List</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">std::</span><span class=\"mtk11\">foreach</span><span class=\"mtk1\">(wholeWealth.</span><span class=\"mtk11\">begin</span><span class=\"mtk1\">(), wholeWealth.</span><span class=\"mtk11\">end</span><span class=\"mtk1\">(), [&amp;slave] (Owned* owned) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">owned</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">SetOwner</span><span class=\"mtk1\">(slave);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span></code></pre>\n<p>이렇게 되면 노예는 굳이 아버지가 남긴 유산을 자신의 것으로 등록하는 redundant한 작업을 수행하지 않는다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (slave-&gt;GetAttribute&lt;Owner&gt;() == slave)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></code></pre>\n<ul>\n<li><strong>아들이 원하는 재산 하나만 아들에게 소유권을 준다.</strong></li>\n</ul>\n<p>이것은 굉장한 술책이다. 왜냐하면 아들 Agent는 현재 <code>GoStudy</code> 함수 수행이 끝나지 않은 상태인데,\n아들이 <strong>원하는</strong> 재산 한 가지를 주어야하므로, 아들에게 무엇을 원하는지 물어봐야한다는 것이다.</p>\n<p>그리고 당시의 시대상을 고려해볼 때 아들은 통신 기기가 발달하지 않았기 때문에 이에 대한 응답을 비동기적(전화나 인터넷 메일 등)으로 공부하다가 중간에 잠깐 응답할 수가 없고, 동기적으로 집까지 와서 해당 재산을 선택해야한다는 것이다.</p>\n<p>따라서 이 유서는, 굉장하게도, 2번째 단계에서 지연된 수행을 시도한다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Will2Phase</span><span class=\"mtk1\"> : </span><span class=\"mtk4\">public</span><span class=\"mtk1\"> </span><span class=\"mtk10\">DeferredJob</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">void</span><span class=\"mtk1\"> operator () (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        Owned* oneOfWealth = </span><span class=\"mtk12\">son</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">choose</span><span class=\"mtk1\">(mWholeWealth);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">oneOfWealth</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">SetOwner</span><span class=\"mtk1\">(son);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">Will2Phase</span><span class=\"mtk1\">(OwnedList&amp; </span><span class=\"mtk12\">wholeWealth</span><span class=\"mtk1\">, PersonRef </span><span class=\"mtk12\">son</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        : </span><span class=\"mtk11\">mWholeWealth</span><span class=\"mtk1\">(wholeWealth), </span><span class=\"mtk11\">mSon</span><span class=\"mtk1\">(son) {}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    OwnedList&amp; mWholeWealth;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    PersonRef mSon;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">} </span><span class=\"mtk11\">will</span><span class=\"mtk1\">(wholeWealth, son);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">son-&gt;</span><span class=\"mtk11\">request</span><span class=\"mtk1\">(will);</span></span></code></pre>\n<p>유서라는 이 Transaction은 완료가 되어야 정식 발효가 되는 그런 개념은 아니다.</p>\n<p>하지만 일말의 양심이 있는 노예는, 재산 소유의 정당성을 얻기 위해, 유서 집행을 서두른다. 덕분에 아들은 비동기적으로 아버지 객체의 Destroy 소식을 들을 것이고, 자신이 수행하던 <code>GoStudy</code> 함수의 수행을 중단하고 그 다음 작업인 <code>Will2Phase::operator() (void)</code> 를 수행하게 될 것이다.</p>\n<p>현명한 아버지의 아들답게, 아들은 <code>choose</code> 함수를 통해 <code>wholeWealth</code> 목록 중에서 노예를 선택한다. 그게 가능한 이유는 <code>wholeWealth</code> 라는 것이 capture된 시점 자체가 <strong>아버지의 유서를 작성한 시점이기 때문에</strong> 비록 그 내부 원소들의 소유권은 노예에게 돌아갔지만, 아직 <strong>그 목록에는 노예가 포함</strong> 되어있기 때문인 것이다.</p>\n<ul>\n<li>만약 아버지의 유서가, 그럴리는 없겠지만, “전 재산을 한 노예에게 줄 것, <strong>그의 재산</strong> 중에서” 라고 유서를 작성했으면 <code>wholeWealth</code> 목록을 갱신해야하므로 아들은 망했을 것이다.</li>\n<li>하지만 프로그래밍을 하다보면 이런 실수는 꽤 있다</li>\n</ul>\n<p>그리고 소유권 이전 문제. 본 글을 처음 작성했던 동아리 친구가 언급한대로 <strong>x∈y and y∈z이지만 x∈z는 성립하지 않는다.</strong></p>\n<p>유서가 모두 집행된 상태에서 breakpoint를 걸어 객체들의 상태를 보면, 아들은 단 하나의 객체, 즉 노예에 대한 Owner일 뿐이고 아직 남은 다른 재산들은 모두 노예에게 소유권이 있다. (갱신을 안 했으니까!)</p>\n<p>그런고로, 아들이 진정 모든 재산의 소유권을 얻으려면 다음의 작업을 해야한다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">OwnedList&amp; remains = oneOfWealth-&gt;GetAttribute&lt;Owned&gt;()-&gt;</span><span class=\"mtk11\">List</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">std::</span><span class=\"mtk11\">foreach</span><span class=\"mtk1\">(remains.</span><span class=\"mtk11\">begin</span><span class=\"mtk1\">(), remains.</span><span class=\"mtk11\">end</span><span class=\"mtk1\">(), [&amp;son] (Owned* owned) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">owned</span><span class=\"mtk1\">-&gt;</span><span class=\"mtk11\">SetOwner</span><span class=\"mtk1\">(son);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span></code></pre>\n<p>하지만 이런 당연한 사실을 구구절절히 읊는 것은 탈무드의 격이 떨어지는 것.<br>\n따라서 이 구절을 간단하게 <em>“현명한 아들은, 아버지의 뜻을 깨닫고, 모든 재산을 얻을 수 있었다”</em>과 같이 표현한 것이다. 요새 말로 하자면 <strong>더 이상의 자세한 설명은 생략한다</strong> 정도?</p>\n<p>다 쓰고 보니 공유 자원에 대한 monitor 드립과 권한 문제 드립을 안 쳤네 […]</p>\n<style class=\"vscode-highlight-styles\">:root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n.default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.default-dark .mtk1 { color: #D4D4D4; }\n.default-dark .mtk2 { color: #1E1E1E; }\n.default-dark .mtk3 { color: #6A9955; }\n.default-dark .mtk4 { color: #569CD6; }\n.default-dark .mtk5 { color: #D16969; }\n.default-dark .mtk6 { color: #D7BA7D; }\n.default-dark .mtk7 { color: #B5CEA8; }\n.default-dark .mtk8 { color: #CE9178; }\n.default-dark .mtk9 { color: #646695; }\n.default-dark .mtk10 { color: #4EC9B0; }\n.default-dark .mtk11 { color: #DCDCAA; }\n.default-dark .mtk12 { color: #9CDCFE; }\n.default-dark .mtk13 { color: #000080; }\n.default-dark .mtk14 { color: #F44747; }\n.default-dark .mtk15 { color: #C586C0; }\n.default-dark .mtk16 { color: #6796E6; }\n.default-dark .mtk17 { color: #808080; }\n.default-dark .mtki { font-style: italic; }\n.default-dark .mtkb { font-weight: bold; }\n.default-dark .mtku { text-decoration: underline; text-underline-position: under; }</style>","excerpt":"…","fields":{"date":"September 20, 2011","shortdesc":""},"frontmatter":{"title":"탈무드 이야기","tags":["c++"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2011/09/20/talmud-wealth-inherit/"}}}