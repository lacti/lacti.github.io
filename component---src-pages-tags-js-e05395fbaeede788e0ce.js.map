{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/utils/tags.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_utils_tags__WEBPACK_IMPORTED_MODULE_5__","TagsPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","a","createElement","className","map","tag","key","fieldValue","to","asTagPath","totalCount","propTypes","PropTypes","shape","arrayOf","string","isRequired","number","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","pathname","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear","href","node"],"mappings":"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","file":"component---src-pages-tags-js-e05395fbaeede788e0ce.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { asTagPath } from \"../utils/tags\"\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout>\n    <SEO title={title} />\n    <ul className=\"tag-list\">\n      {group.map(tag => (\n        <li key={tag.fieldValue} className=\"tag-item\">\n          <Link to={`/tags/${asTagPath(tag.fieldValue)}/`}>\n            {tag.fieldValue} ({tag.totalCount})\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/*\n * This function would be referenced from `gatsby-node.js`\n * so it cannot use ES6 module syntax to export.\n */\nmodule.exports.asTagPath = tag => {\n  switch (tag) {\n    case \"c++\":\n      return \"cplusplus\"\n    case \"c#\":\n      return \"csharp\"\n    default:\n      return tag\n  }\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ title, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={title || data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n}\n\nexport default Layout\n"],"sourceRoot":""}