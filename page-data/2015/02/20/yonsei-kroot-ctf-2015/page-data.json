{"componentChunkName":"component---src-templates-page-tsx","path":"/2015/02/20/yonsei-kroot-ctf-2015/","webpackCompilationHash":"e5e0a94e368acafd71f1","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p>연세대학교 보안 동아리 <a href=\"https://kroot.yonsei.ac.kr/\">Kroot</a>에서 주최하는 <a href=\"https://krootctf.yonsei.ac.kr/\">CTF 2015</a>에 참가했다. 보안이란 주제랑은 별로 관련이 없는 삶을 살아온지라 […] 난이도 낮은 문제 + 힌트가 공개된 문제를 중점으로 풀었다.</p>\n<p>웹은 아는게 없는지라 바로 스킵했다(…)</p>\n<p><a href=\"https://krootctf.yonsei.ac.kr/challenges\">challensges</a>에서 문제 내역을 확인할 수 있다…근데 지금 다 undefined로 나오고 있는데 이게 잠시 발생한 장애인지, 아니면 앞으로 계속 이럴지는 잘 모르겠다.</p>\n<h3>문제풀이 내역</h3>\n<p>이 문서에서는 각 문제를 어떻게 풀었는지 간단히 요약한다. 문제는 c#으로 풀었다. linqpad에서 풀었고 필요 시 nuget으로 library를 추가해서 썼다.</p>\n<h4>misc #2</h4>\n<p>kroot_<strong>_ 문자열에 대한 SHA1 값이 주어질 때 __</strong>에 들어갈 문자열을 찾는다. 다행히 문자열에 대한 dictionary를 제공해줬다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;1fdc6d2dd3f6041374e63f124684898e747f4d0f&quot;</span><span class=\"mtk1\">.</span><span class=\"mtk11\">StringToByteArray</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">using</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">sha1</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">SHA1</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Create</span><span class=\"mtk1\">())</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">line</span><span class=\"mtk1\"> </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> </span><span class=\"mtk10\">File</span><span class=\"mtk1\">.</span><span class=\"mtk10\">ReadAllLines</span><span class=\"mtk1\">(&quot;</span><span class=\"mtk10\">dictionary_1e93cafb</span><span class=\"mtk1\">.</span><span class=\"mtk10\">txt</span><span class=\"mtk1\">&quot;))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">message</span><span class=\"mtk1\"> = &quot;</span><span class=\"mtk10\">kroot</span><span class=\"mtk1\">&quot; + </span><span class=\"mtk10\">line</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">sha1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ComputeHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Encoding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">UTF8</span><span class=\"mtk1\">.</span><span class=\"mtk11\">GetBytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">message</span><span class=\"mtk1\">));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk11\">SequenceEqual</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">line</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h4>misc #3</h4>\n<p>압축 파일의 암호를 찾아 압축을 풀고 flag를 찾는다. 암호는 kroot<strong>_</strong>으로 00000 ~ 99999까지가 들어갈 수 있다.</p>\n<p>간단히 <a href=\"https://github.com/icsharpcode/SharpZipLib\">sharpziplib</a>을 사용해서 예제의 <a href=\"https://github.com/icsharpcode/SharpZipLib/wiki/Zip-Samples#user-content--unpack-a-zip-with-full-control-over-the-operation\">ExtractZipFile</a> 함수에 가능한 암호를 모두 사용해서 풀도록 했다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">zipPath</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;password_e635597a.zip&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">outputPath</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;kroot_ctf_2015&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">password</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100000</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Select</span><span class=\"mtk1\">(</span><span class=\"mtk12\">e</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk12\">string</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Format</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;kroot{0:D05}&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">e</span><span class=\"mtk1\">)))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">try</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">ExtractZipFile</span><span class=\"mtk1\">(</span><span class=\"mtk12\">zipPath</span><span class=\"mtk1\">, </span><span class=\"mtk12\">password</span><span class=\"mtk1\">, </span><span class=\"mtk12\">outputPath</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">password</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">catch</span><span class=\"mtk1\"> {}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h4>algorithm #4</h4>\n<p>점 3개를 입력 받아서 평면방정식을 구한다. <code>ax+by+cz+d=0</code>의 a, b, c, d를 구하되 a는 양수이고 이들은 서로이어야 한다.</p>\n<p>점 2개의 vector 구해서 행렬식으로 풀었다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">val</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">line</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Replace</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;(&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Replace</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;)&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Replace</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;,&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Split</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39; &#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">Where</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> =&gt; !</span><span class=\"mtk12\">string</span><span class=\"mtk1\">.</span><span class=\"mtk11\">IsNullOrWhiteSpace</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">Select</span><span class=\"mtk1\">(</span><span class=\"mtk12\">int</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Parse</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ToArray</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">p1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Point</span><span class=\"mtk1\">(</span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">], </span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">], </span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">]);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">p2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Point</span><span class=\"mtk1\">(</span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">3</span><span class=\"mtk1\">], </span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">4</span><span class=\"mtk1\">], </span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">5</span><span class=\"mtk1\">]);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">p3</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Point</span><span class=\"mtk1\">(</span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">6</span><span class=\"mtk1\">], </span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">7</span><span class=\"mtk1\">], </span><span class=\"mtk12\">val</span><span class=\"mtk1\">[</span><span class=\"mtk7\">8</span><span class=\"mtk1\">]);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">p2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\">; </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">p2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">; </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">c</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Z</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">p2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Z</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">d</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">p3</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\">; </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">e</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">p3</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">; </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">f</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Z</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">p3</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Z</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">alpha</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">b</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">f</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">c</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">e</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">beta</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">c</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">d</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">f</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gamma</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">e</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">b</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">d</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">delta</span><span class=\"mtk1\"> = -</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">alpha</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">beta</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">gamma</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">p1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Z</span><span class=\"mtk1\">);</span></span></code></pre>\n<p>그리고 alpha 양수로 맞추고 최대공약수 찾아서 나눠주고 했다. tcp로 응답하는 문제이므로 간단히 socket 코딩을 했다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk10\">TcpClient</span><span class=\"mtk1\"> </span><span class=\"mtk12\">client</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TcpClient</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;krootctf.yonsei.ac.kr&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">8002</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">using</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">reader</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">StreamReader</span><span class=\"mtk1\">(</span><span class=\"mtk10\">client</span><span class=\"mtk1\">.</span><span class=\"mtk10\">GetStream</span><span class=\"mtk1\">()))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk10\">using</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">writer</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">StreamWriter</span><span class=\"mtk1\">(</span><span class=\"mtk10\">client</span><span class=\"mtk1\">.</span><span class=\"mtk10\">GetStream</span><span class=\"mtk1\">()))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">true</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">count</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">reader</span><span class=\"mtk1\">.</span><span class=\"mtk10\">ReadLine</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">count</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">null</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">count</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">line</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">reader</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ReadLine</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">line</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">null</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">line</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">plain</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">GetPlain</span><span class=\"mtk1\">(</span><span class=\"mtk12\">line</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">string</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Format</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;{0} {1} {2} {3}&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">plain</span><span class=\"mtk1\">.</span><span class=\"mtk12\">A</span><span class=\"mtk1\">, </span><span class=\"mtk12\">plain</span><span class=\"mtk1\">.</span><span class=\"mtk12\">B</span><span class=\"mtk1\">, </span><span class=\"mtk12\">plain</span><span class=\"mtk1\">.</span><span class=\"mtk12\">C</span><span class=\"mtk1\">, </span><span class=\"mtk12\">plain</span><span class=\"mtk1\">.</span><span class=\"mtk12\">D</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">writer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Write</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\"> + </span><span class=\"mtk8\">&quot;</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">writer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Flush</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">answer</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">result</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">reader</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ReadLine</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">result</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>socket 틀은 고정이므로 이후 문제에 대해서는 위 틀을 언급하지 않는다. 다만 초반에 별 지식이 없어서,</p>\n<ul>\n<li><code>Flush()</code>를 호출하지 않고 왜 응답이 제대로 안 오나를 한참 고민하고 […]</li>\n<li>line delimiter로 <code>\\n</code>이 아니라 <code>\\r\\n</code>을 썼다가 잘못 인식되어서 또 한참 고민했다 […]</li>\n</ul>\n<h4>vulnerable #5</h4>\n<p>용이랑 싸우는 문제다. 제약상 통상적인 공격으로 용을 이길 수는 없고, 매 턴마다 힐을 쓰는 용의 패턴을 이용해 용의 hp를 overflow시킨다. 힐 쓰다가 mp 부족하면 mp 채우면서 버티면 된다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">// network stream</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">line</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">null</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">index</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">line</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">reader</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ReadLine</span><span class=\"mtk1\">()) != </span><span class=\"mtk4\">null</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteLine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">line</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">line</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Contains</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Your skills&quot;</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">command</span><span class=\"mtk1\"> = ++</span><span class=\"mtk12\">index</span><span class=\"mtk1\"> % </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> : </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">writer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Write</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;{0}</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">command</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">writer</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Flush</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h4>crypto #8</h4>\n<p>snail 문제다. 주어진 문서 100 x 100 배열 만들어넣고 snail 풀어서 결과를 sha1해주면 된다. 대충 간단히 짰다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">char</span><span class=\"mtk1\">[,] </span><span class=\"mtk12\">snail</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk4\">char</span><span class=\"mtk1\">[</span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">// put string into 100x100 array of character</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">result</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">StringBuilder</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">bool</span><span class=\"mtk1\">[,] </span><span class=\"mtk12\">visit</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk4\">bool</span><span class=\"mtk1\">[</span><span class=\"mtk7\">100</span><span class=\"mtk1\">, </span><span class=\"mtk7\">100</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dirIndex</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dirs</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\">[]</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, -</span><span class=\"mtk7\">1</span><span class=\"mtk1\">), </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\">(-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pos</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">pos</span><span class=\"mtk1\"> != </span><span class=\"mtk4\">null</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">visit</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\">])</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">visit</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\">] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">result</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Append</span><span class=\"mtk1\">(</span><span class=\"mtk12\">snail</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\">]);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">null</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">dirs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Vec</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">dirs</span><span class=\"mtk1\">[</span><span class=\"mtk12\">dirIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">X</span><span class=\"mtk1\">, </span><span class=\"mtk12\">pos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">dirs</span><span class=\"mtk1\">[</span><span class=\"mtk12\">dirIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">100</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">100</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            || </span><span class=\"mtk12\">visit</span><span class=\"mtk1\">[</span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Y</span><span class=\"mtk1\">, </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">.</span><span class=\"mtk12\">X</span><span class=\"mtk1\">])</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">dirIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">dirIndex</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) % </span><span class=\"mtk12\">dirs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Length</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">pos</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nextPos</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h4>pwnable #9</h4>\n<p>root 권한이 있어야 읽을 수 있는 flag 파일, s 권한이 있는 실행 파일이 있다. s 권한이 있는 실행 파일은 <code>system(\"ls -l\")</code> 명령을 수행하는데 정확히 <code>ls</code>가 뭔지 명시를 안해줬으므로 내가 만든 <code>ls</code>를 실행해주면 되겠다.</p>\n<p>간단히 내 dir에서 <code>ls</code>를 만든 후 PATH에 ls 경로를 추가하고 위 실행 파일을 실행한다.</p>\n<h4>forensic #11</h4>\n<p>문제의 png 파일을 hex editor로 열어서 하단부에 잘 보면 PK으로 시작하는 부분이 있다. 이 부분만 추출하면 zip 파일을 얻을 수 있고 얻어낸 zip 파일을 풀면 여러 text가 나온다. 이걸 다 합쳐서 읽어주면 된다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk12\">string</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Join</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Directory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">GetFiles</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;texts&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;*.txt&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Select</span><span class=\"mtk1\">(</span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ReadAllText</span><span class=\"mtk1\">))</span></span></code></pre>\n<h4>network #12</h4>\n<p>pcap 파일을 wireshark로 열어서 target host를 찍고 frame을 좀 보면 http packet임을 확인할 수 있다. wireshark는 그러한 frame을 reassemble해주므로 protocol이 http인 대상을 찾아서(<code>http 200 ok</code>) data 부분만 export하면 된다.</p>\n<p>그러면 binary 파일이 나오는데 md5 checksum을 제출하면 된다.</p>\n<h4>misc #15</h4>\n<p>조각난 이미지 파일을 이어붙여서 읽는 문제다. 일단 퍼즐을 어떻게 풀라는지 문제가 이해가 안되어서 문제에 서술한 수식 그대로 png 파일을 조합했다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">imagePathFormat</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">@&quot;puzzle_080bdb7c\\img_{0}{1}.png&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk10\">Bitmap</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bitmap</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Bitmap</span><span class=\"mtk1\">(</span><span class=\"mtk7\">400</span><span class=\"mtk1\">, </span><span class=\"mtk7\">400</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">using</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">g</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Graphics</span><span class=\"mtk1\">.</span><span class=\"mtk10\">FromImage</span><span class=\"mtk1\">(</span><span class=\"mtk10\">bitmap</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">var</span><span class=\"mtk1\"> </span><span class=\"mtk10\">yDomain</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Range</span><span class=\"mtk1\">(1, 10).</span><span class=\"mtk10\">Select</span><span class=\"mtk1\">(</span><span class=\"mtk10\">e</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk10\">e</span><span class=\"mtk1\"> % 10).</span><span class=\"mtk10\">ToArray</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xDomain</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ToArray</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">y</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">x</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">10</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">path</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">string</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Format</span><span class=\"mtk1\">(</span><span class=\"mtk12\">imagePathFormat</span><span class=\"mtk1\">, </span><span class=\"mtk12\">yDomain</span><span class=\"mtk1\">[</span><span class=\"mtk12\">y</span><span class=\"mtk1\">], </span><span class=\"mtk12\">xDomain</span><span class=\"mtk1\">[</span><span class=\"mtk12\">x</span><span class=\"mtk1\">]);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">image</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Image</span><span class=\"mtk1\">.</span><span class=\"mtk11\">FromFile</span><span class=\"mtk1\">(</span><span class=\"mtk12\">path</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">g</span><span class=\"mtk1\">.</span><span class=\"mtk11\">DrawImage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">image</span><span class=\"mtk1\">, </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PointF</span><span class=\"mtk1\">(</span><span class=\"mtk7\">40</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">x</span><span class=\"mtk1\">, </span><span class=\"mtk7\">40</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">y</span><span class=\"mtk1\">));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">path</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Dump</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk12\">bitmap</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Save</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;result.png&quot;</span><span class=\"mtk1\">);</span></span></code></pre>\n<p>결과로 애매하게 찌그러진 qr code가 나와서 대충 photoshop으로 배열을 맞춰주고 reader로 읽으면 flag가 나온다.</p>\n<h4>algorithm #17</h4>\n<p><a href=\"https://en.wikipedia.org/wiki/Walsh_matrix\">Walsh Matrix</a>을 구하고 지정된 row의 1인 column index의 합을 구한다. n이 굉장히 커지면 matrix를 다 구하지 않고 문제를 풀어야겠지만 <em>그럴 일이 없다고 가정하고 + 내 컴퓨터의 성능을 믿고</em> 그냥 matrix 다 구해서 풀었다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk10\">Dictionary</span><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">int</span><span class=\"mtk1\">, </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">cacheMap</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Dictionary</span><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">int</span><span class=\"mtk1\">, </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\">&gt;();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SumOfNonNegativeColumnIndex</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">row</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">n</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sum</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">GetOrCreateBitArray</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">col</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">n</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bits</span><span class=\"mtk1\">[(</span><span class=\"mtk12\">row</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">col</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">])</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk12\">sum</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">col</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sum</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk10\">BitArray</span><span class=\"mtk1\"> </span><span class=\"mtk11\">GetOrCreateBitArray</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">cacheMap</span><span class=\"mtk1\">.</span><span class=\"mtk11\">TryGetValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk4\">out</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">n</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bits</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\">(</span><span class=\"mtk7\">4</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Set</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Set</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Set</span><span class=\"mtk1\">(</span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Set</span><span class=\"mtk1\">(</span><span class=\"mtk7\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">else</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bits</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">n</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">halfs</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">GetOrCreateBitArray</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">CopyTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">, </span><span class=\"mtk12\">halfs</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">CopyTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">, </span><span class=\"mtk12\">halfs</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">CopyTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">, </span><span class=\"mtk12\">halfs</span><span class=\"mtk1\">, </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">CopyTo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">, </span><span class=\"mtk12\">halfs</span><span class=\"mtk1\">, </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">cacheMap</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bits</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">void</span><span class=\"mtk1\"> </span><span class=\"mtk11\">CopyTo</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">, </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dest</span><span class=\"mtk1\">, </span><span class=\"mtk10\">BitArray</span><span class=\"mtk1\"> </span><span class=\"mtk12\">src</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">y</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">x</span><span class=\"mtk1\">, </span><span class=\"mtk4\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">negate</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\">++)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">src</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">j</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">dest</span><span class=\"mtk1\">[(</span><span class=\"mtk12\">y</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">i</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">x</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">j</span><span class=\"mtk1\">)] = !</span><span class=\"mtk12\">negate</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> : !</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>그래도 두려워서 BitArray를 썼는데 다행히 n이 1024 정도만 나와서 별 문제가 없었다.</p>\n<p>network 문제여서 socket template을 가져다 썼다. 다만 정규식의 존재를 까먹고 문제 부분을 어떻게 parsing할까 꽤 고민을 했다(…)</p>\n<h4>crypto #24</h4>\n<p>key1, 2에 대해 byte serial의 홀수열과 짝수열이 xor로 암호화된 파일을 복호화하는 문제다. key1, 2는 <code>[a..z]</code>이므로 이 구간에 대해 나올 수 있는 <code>26x26</code> 가지 수를 확인하고 복호화를 하면 되겠다.</p>\n<p>일단 다음과 같이 첫 256bytes 정도만 간을 보고,</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">key1</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">26</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Select</span><span class=\"mtk1\">(</span><span class=\"mtk12\">e</span><span class=\"mtk1\"> =&gt; (</span><span class=\"mtk4\">byte</span><span class=\"mtk1\">)(</span><span class=\"mtk12\">e</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">int</span><span class=\"mtk1\">)</span><span class=\"mtk8\">&#39;a&#39;</span><span class=\"mtk1\">)))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">key2</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Enumerable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Range</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">26</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Select</span><span class=\"mtk1\">(</span><span class=\"mtk12\">e</span><span class=\"mtk1\"> =&gt; (</span><span class=\"mtk4\">byte</span><span class=\"mtk1\">)(</span><span class=\"mtk12\">e</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">int</span><span class=\"mtk1\">)</span><span class=\"mtk8\">&#39;a&#39;</span><span class=\"mtk1\">)))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">byte</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">dec</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ReadAllBytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;mycrypto_enc_19094444&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Take</span><span class=\"mtk1\">(</span><span class=\"mtk7\">256</span><span class=\"mtk1\">).</span><span class=\"mtk11\">ToArray</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">dec</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> % </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">dec</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] ^= </span><span class=\"mtk12\">key1</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dec</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] ^= </span><span class=\"mtk12\">key2</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk11\">AppendAllText</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;result.txt&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Format</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;{0},{1}</span><span class=\"mtk6\">\\n</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">key1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">key2</span><span class=\"mtk1\">));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk11\">AppendAllText</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;result.txt&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Encoding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">UTF8</span><span class=\"mtk1\">.</span><span class=\"mtk11\">GetString</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dec</span><span class=\"mtk1\">) + </span><span class=\"mtk8\">&quot;</span><span class=\"mtk6\">\\n\\n</span><span class=\"mtk8\">&quot;</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>눈으로 훑어보니 <code>(key1,key2) = (107,114)</code> 이므로 해당 값으로 파일 전체를 복호화한 후 pdf 파일에서 flag를 읽었다.</p>\n<h4>misc #25</h4>\n<p><code>[file header...][file data 1K (RR)...]</code> 방식의 파일이므로 역순으로 읽으면 되겠다. entry 개수를 기록하지는 않고 delimiter(<code>0xFF</code>) 구문해놓은 것 같은데 개수 세는 것까지 하면 귀찮을 것 같아 개수는 눈으로(…) 세고 archiving을 풀었다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk4\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">EOF</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;yum3EOF&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ReadAllBytes</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;output_9aadad33.yum3tar&quot;</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cursor1</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cursor2</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entries</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk10\">Entry</span><span class=\"mtk1\">&gt;();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">7</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">cursor1</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">NextFF</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">cursor2</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">cursor2</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">NextFF</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">cursor1</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Add</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">Entry</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Name</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Encoding</span><span class=\"mtk1\">.</span><span class=\"mtk12\">UTF8</span><span class=\"mtk1\">.</span><span class=\"mtk11\">GetString</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">cursor1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">cursor2</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">cursor1</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">),</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BitConverter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ToInt32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">cursor2</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    });</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entry</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Delete</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Path</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Combine</span><span class=\"mtk1\">(</span><span class=\"mtk12\">outPath</span><span class=\"mtk1\">, </span><span class=\"mtk12\">entry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Name</span><span class=\"mtk1\">));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cursor</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">NextFF</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">, </span><span class=\"mtk12\">cursor2</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">cursor</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">EOF</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Length</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Length</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">entries</span><span class=\"mtk1\">[</span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">Length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) % </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Count</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fetchSize</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Min</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1024</span><span class=\"mtk1\">, </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">[</span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">Length</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">[</span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">Bytes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">AddRange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Skip</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cursor</span><span class=\"mtk1\">).</span><span class=\"mtk11\">Take</span><span class=\"mtk1\">(</span><span class=\"mtk12\">fetchSize</span><span class=\"mtk1\">));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">[</span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\">].</span><span class=\"mtk12\">Length</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">fetchSize</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">cursor</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">fetchSize</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">entryIndex</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) % </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Count</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk15\">foreach</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">var</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entry</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk12\">entries</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">File</span><span class=\"mtk1\">.</span><span class=\"mtk11\">WriteAllBytes</span><span class=\"mtk1\">(</span><span class=\"mtk12\">Path</span><span class=\"mtk1\">.</span><span class=\"mtk11\">Combine</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;unpack&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">entry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Name</span><span class=\"mtk1\">), </span><span class=\"mtk12\">entry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Bytes</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ToArray</span><span class=\"mtk1\">());</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h4>algorithm #28</h4>\n<p>1을 <code>()>{}</code>이라 했을 때 neg, shl과 complement를 사용해서 다른 숫자들을 표현하면 되는 것이다. 따라서 2로 나누었을 때 홀수가 되면 complement+neg 처리 후 다시 shl로 처리해주면 된다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">string</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewNumber</span><span class=\"mtk1\">(</span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;()&gt;{}&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> % </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;(&quot;</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">NewNumber</span><span class=\"mtk1\">(</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">) + </span><span class=\"mtk8\">&quot;)&lt;&lt;(()&gt;{})&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> % </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;~(&quot;</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">NewNumber</span><span class=\"mtk1\">(-</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\">) + </span><span class=\"mtk8\">&quot;)&lt;&lt;(()&gt;{})&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;~(&quot;</span><span class=\"mtk1\"> + </span><span class=\"mtk11\">NewNumber</span><span class=\"mtk1\">(-</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">value</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) + </span><span class=\"mtk8\">&quot;)&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>문제의 요구 사항대로 0x20 ~ 0x7F까지 출력해주면 된다.</p>\n<h3>마무리</h3>\n<p>적절히 쉬운 문제도 많고 힌트도 많아서 없는 실력에도 재밌게 했다. 다만 좀 아쉬운건 학과 내부 사람을 대상으로만 진행했고 그나마도 홍보가 좀 덜 되어서 모처럼 좋은 기회를 놓친 사람이 많은 것 같다는 것이다. 다음에 이런 행사가 있으면 좀 더 주변에 널리 소문내야겠다 :)</p>\n<p>준비한 분들이 정말 대단하고 멋지다. 나도 언젠가는 이런거 열어보고 싶다 […] 능력이 된다면 […]</p>\n<style class=\"vscode-highlight-styles\">:root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n.default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.default-dark .mtk1 { color: #D4D4D4; }\n.default-dark .mtk2 { color: #1E1E1E; }\n.default-dark .mtk3 { color: #6A9955; }\n.default-dark .mtk4 { color: #569CD6; }\n.default-dark .mtk5 { color: #D16969; }\n.default-dark .mtk6 { color: #D7BA7D; }\n.default-dark .mtk7 { color: #B5CEA8; }\n.default-dark .mtk8 { color: #CE9178; }\n.default-dark .mtk9 { color: #646695; }\n.default-dark .mtk10 { color: #4EC9B0; }\n.default-dark .mtk11 { color: #DCDCAA; }\n.default-dark .mtk12 { color: #9CDCFE; }\n.default-dark .mtk13 { color: #000080; }\n.default-dark .mtk14 { color: #F44747; }\n.default-dark .mtk15 { color: #C586C0; }\n.default-dark .mtk16 { color: #6796E6; }\n.default-dark .mtk17 { color: #808080; }\n.default-dark .mtki { font-style: italic; }\n.default-dark .mtkb { font-weight: bold; }\n.default-dark .mtku { text-decoration: underline; text-underline-position: under; }</style>","excerpt":"연세대학교 보안 동아리 Kroot에서 주최하는 CTF 2015에 참가했다. 보안이란 주제랑은 별로 관련이 없는 삶을 살아온지라 … 난이도 낮은 문제 + 힌트가 공개된 문제를 중점으로 풀었다.웹은 아는게 없는지라 바로 스킵했다(…)challensges…","fields":{"date":"February 20, 2015","shortdesc":""},"frontmatter":{"title":"kroot ctf 2015","tags":["c#","kroot","ctf"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015/02/20/yonsei-kroot-ctf-2015/"}}}