{"componentChunkName":"component---src-templates-page-tsx","path":"/2011/03/20/classical-inheritance-in-javascript/","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p><a href=\"https://javascript.crockford.com/inheritance.html\">Classical Inheritance in JavaScript</a></p>\n<p>JavaScript: The World’s Most Misunderstood Programming Language을 쓴 Douglas Crockford란 분이 쓴 글인데 지난 번에 귀찮아서 안 읽었다가 요번에 읽어보니까 꽤 좋은 내용이다.<br>\njavascript에서 객체지향적 구성이 필요할까에 대해 의문이 있지만 재사용성을 고려해볼 때 생각해볼만한 주제이므로 알아두는 것도 좋겠다.</p>\n<p>하지만 기본적으로 여타 객체지향적 언어와 같은 문법으로 지원하지는 않으니 보통 prototypejs나 jquery 등을 사용한 뒤 class를 정의해서 쓰는 방법을 쓰거나 아니면 아예 javascript 고유의 문법으로 수행하지만 이 사람이 만든대로 몇가지 간단한 sugar function을 사용하면 더욱 간단한 문법으로 표현 가능하니 다른 라이브러리에 의존하지 않고 상속 구조를 구현하려면 이것도 괜찮겠다 싶다.</p>\n<p>물론 다른 라이브러리를 쓰게 된다면 어차피 그 라이브러리에 유사한 기능이 있을테니 그걸 쓰면 되겠다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","excerpt":"Classical Inheritance in JavaScript JavaScript: The World’s Most Misunderstood Programming Language을 쓴 Douglas Crockford…","fields":{"date":"March 20, 2011","shortdesc":"","slug":"/2011/03/20/classical-inheritance-in-javascript/"},"frontmatter":{"title":"Classical Inheritance in JavaScript","tags":["javascript"]}}},"pageContext":{"slug":"/2011/03/20/classical-inheritance-in-javascript/","older":{"slug":"/2011/03/02/implementation-instance-id-with-java-annotation/","title":"java annotation을 사용한 InstanceId 구현"},"newer":{"slug":"/2011/05/01/mysql-insert/","title":"MySQL INSERT"}}},"staticQueryHashes":["848695393"]}