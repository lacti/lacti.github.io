{"version":3,"sources":["webpack:///./src/components/PostDate.tsx","webpack:///./src/templates/tag.tsx","webpack:///./src/utils/tag.ts","webpack:///./src/components/Tag.tsx","webpack:///./src/components/PostItem.tsx","webpack:///./src/components/PostList.tsx"],"names":["StyledDate","PostDate","date","StyledTitle","TagsTemplate","tag","pageContext","data","allMarkdownRemark","edges","totalCount","items","map","node","excerpt","fields","slug","frontmatter","title","tags","encodeTagForURL","StyledContainer","Tag","to","StyledTagsContainer","StyledExcerpt","PostItem","key","StyledList","PostList","item"],"mappings":"mIAGA,IAAMA,EAAa,oBAAH,sCAAG,CAAH,+GAgBDC,IAJ2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxC,YAACF,EAAD,KAAaE,K,iICPf,IAAMC,EAAc,kBAAH,uCAAG,CAAH,uDAuDFC,UA1B4B,SAAC,GAAD,IAC1BC,EAD0B,EACzCC,YAAeD,IAD0B,IAEzCE,KACEC,kBAAqBC,EAHkB,EAGlBA,MAAOC,EAHW,EAGXA,WAHW,OAMzC,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAACP,EAAD,KAAiBO,EAAjB,sBAAiDL,GACjD,YAAC,IAAD,CACEM,MAAOF,EAAMG,KACX,oBACEC,KACEC,EAFJ,EAEIA,QAFJ,IAGIC,OAAUb,EAHd,EAGcA,KAAMc,EAHpB,EAGoBA,KAHpB,IAIIC,YAJJ,MAMO,CAAEH,UAASZ,OAAMc,OAAME,MAN9B,EAImBA,MAEkBC,KANrC,EAI0BA,gB,0ECtDzBC,EAAkB,SAACf,GAC9B,OAAQA,GACN,IAAK,MACH,MAAO,YACT,IAAK,KACH,MAAO,SACT,QACE,OAAOA,I,YCFb,IAAMgB,EAAkB,mBAAH,4CAAG,CAAH,kIAkBNC,IANiB,SAAC,GAAD,IAAGjB,EAAH,EAAGA,IAAH,OAC9B,YAACgB,EAAD,KACE,YAAC,IAAD,CAAME,GAAE,QAAUH,EAAgBf,GAA1B,KAAoCA,M,0HCbhD,IAAMgB,EAAkB,kBAAH,4CAAG,CAAH,8CAIflB,EAAc,kBAAH,wCAAG,CAAH,yGASXqB,EAAsB,mBAAH,gDAAG,CAAH,6CAInBC,EAAgB,iBAAH,0CAAG,CAAH,gDAmCJC,EAvB2B,SAAC,GAAD,IACxCZ,EADwC,EACxCA,QACAE,EAFwC,EAExCA,KACAE,EAHwC,EAGxCA,MACAhB,EAJwC,EAIxCA,KACAiB,EALwC,EAKxCA,KALwC,OAOxC,YAACE,EAAD,KACE,YAAClB,EAAD,KACE,YAAC,IAAD,CAAMoB,GAAIP,EAAME,MAAOJ,GACpBI,IAGL,YAACM,EAAD,KACE,YAACvB,EAAA,EAAD,CAAUC,KAAMA,IACfiB,EAAKP,KAAI,SAAAP,GAAG,OACX,YAACiB,EAAA,EAAD,CAAKK,IAAKtB,EAAKA,IAAKA,QAGxB,YAACoB,EAAD,KAAgBX,KClDpB,IAAMc,EAAa,kBAAH,uCAAG,CAAH,4DAcDC,IARwC,SAAC,GAAD,IAAGlB,EAAH,EAAGA,MAAH,OACrD,YAACiB,EAAD,KACGjB,EAAMC,KAAI,SAAAkB,GAAI,OACb,YAAC,EAAD,aAAUH,IAAKG,EAAKd,MAAUc","file":"component---src-templates-tag-tsx-f8c1536df6b1e52beb83.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledDate = styled.span`\n  display: inline-block;\n  font-size: 1rem;\n  font-weight: 500;\n  display: inline-block;\n  margin: 4px;\n`;\n\nexport interface PostDateProps {\n  date: string;\n}\n\nconst PostDate: React.FC<PostDateProps> = ({ date }) => (\n  <StyledDate>{date}</StyledDate>\n);\n\nexport default PostDate;\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Page from \"../components/Page\";\nimport Container from \"../components/Container\";\nimport IndexLayout from \"../layouts\";\nimport PostList from \"../components/PostList\";\n\nconst StyledTitle = styled.h3`\n  margin: 0;\n  margin-bottom: 2rem;\n`;\n\ninterface TagsProps {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: {\n          excerpt: string;\n          fields: {\n            slug: string;\n            date: string;\n          };\n          frontmatter: {\n            title: string;\n            tags: string[];\n          };\n        };\n      }[];\n    };\n  };\n}\n\nconst TagsTemplate: React.SFC<TagsProps> = ({\n  pageContext: { tag },\n  data: {\n    allMarkdownRemark: { edges, totalCount }\n  }\n}) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <StyledTitle>{`${totalCount} posts tagged with ${tag}`}</StyledTitle>\n        <PostList\n          items={edges.map(\n            ({\n              node: {\n                excerpt,\n                fields: { date, slug },\n                frontmatter: { title, tags }\n              }\n            }) => ({ excerpt, date, slug, title, tags })\n          )}\n        />\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 240)\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          frontmatter {\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","export const encodeTagForURL = (tag: string) => {\n  switch (tag) {\n    case \"c++\":\n      return \"cplusplus\";\n    case \"c#\":\n      return \"csharp\";\n    default:\n      return tag;\n  }\n};\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport { encodeTagForURL } from \"../utils/tag\";\n\nconst StyledContainer = styled.div`\n  display: inline-block;\n  padding: 4px 8px;\n  margin: 4px 4px 4px 4px;\n  border-radius: 8px;\n  background-color: #f1f1f1;\n`;\n\ninterface TagProps {\n  tag: string;\n}\n\nconst Tag: React.FC<TagProps> = ({ tag }) => (\n  <StyledContainer>\n    <Link to={`/tag/${encodeTagForURL(tag)}/`}>{tag}</Link>\n  </StyledContainer>\n);\n\nexport default Tag;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport Tag from \"./Tag\";\nimport PostDate from \"./PostDate\";\n\nconst StyledContainer = styled.li`\n  margin-bottom: 2rem;\n`;\n\nconst StyledTitle = styled.h1`\n  font-size: 1.8rem;\n  margin-bottom: 6px;\n  color: blue;\n  [\"& a\"]: {\n    text-decoration: none;\n  }\n`;\n\nconst StyledTagsContainer = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst StyledExcerpt = styled.p`\n  word-break: break-all;\n`;\n\nexport interface PostItemProps {\n  excerpt: string;\n  slug: string;\n  date: string;\n  title: string;\n  tags: string[];\n}\n\nconst PostItem: React.FC<PostItemProps> = ({\n  excerpt,\n  slug,\n  title,\n  date,\n  tags\n}) => (\n  <StyledContainer>\n    <StyledTitle>\n      <Link to={slug} title={excerpt}>\n        {title}\n      </Link>\n    </StyledTitle>\n    <StyledTagsContainer>\n      <PostDate date={date} />\n      {tags.map(tag => (\n        <Tag key={tag} tag={tag} />\n      ))}\n    </StyledTagsContainer>\n    <StyledExcerpt>{excerpt}</StyledExcerpt>\n  </StyledContainer>\n);\n\nexport default PostItem;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PostItem, { PostItemProps } from \"./PostItem\";\n\nconst StyledList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst PostList: React.FC<{ items: PostItemProps[] }> = ({ items }) => (\n  <StyledList>\n    {items.map(item => (\n      <PostItem key={item.slug} {...item} />\n    ))}\n  </StyledList>\n);\n\nexport default PostList;\n"],"sourceRoot":""}