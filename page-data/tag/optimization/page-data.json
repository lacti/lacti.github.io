{"componentChunkName":"component---src-templates-tag-tsx","path":"/tag/optimization/","webpackCompilationHash":"cdfa71eb19fc14d91b48","result":{"data":{"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"excerpt":"https://www.slideshare.net/JaeseungHa/ndc-2014-35508014하재승요약최적화 아이디어 공유 (분할 압축, dumpable, resource dependency)하지만 정작 효과가 큰 방법은 버그 수정이었다. (잘못 들어간 logging 삭제)문제 분석유저가 만족하는 편안한 게임을 만들어 보자.하지만…","fields":{"date":"May 29, 2014","slug":"/2014/05/29/ndc14-dungeon-and-fighter-loader-optimization/"},"frontmatter":{"title":"던전 앤 파이터 클라이언트 로딩 속도 최적화 - 우리 아이가 세배 빨라졌어요!","tags":["ndc14","optimization"]}}},{"node":{"excerpt":"최근 회사에서 c#으로 네트워크 프로그래밍을 하고 있다. 일은 아니고 그냥 개인의 취향\n나름 c#도 속도가 괜찮다는 것을 보여주려고 시작을 했는데, 진행하면서 점점 보이는 결과는 영 좋지 않다.서버 과부하 테스트 프로그램을 c#으로 porting했다. 정말 과부하 테스트를 하려면 c++로 작성해야 맞지만 테스트 로직까지 c++로 작성하면 골치가 아프니 core는 c++, logic은 c…","fields":{"date":"February 14, 2014","slug":"/2014/02/14/secret-of-mswsock-dll/"},"frontmatter":{"title":"mswsock.dll의 비밀","tags":["optimization","network","c#"]}}},{"node":{"excerpt":"지금 일하고 있는 회사에서는 모든 게임 데이터를 xml로 기술하고 있다. 서버가 시작할 때 읽게 되는 xml의 양만 본다면 대략 800~900MB로 엄청난 양을 읽어야 한다. 덕분에 서버가 저 모든 데이터시트를 읽어서 메모리에 올리는 시간만 약 4~…","fields":{"date":"June 09, 2013","slug":"/2013/06/09/binary-xml-for-fast-loading/"},"frontmatter":{"title":"xml 기반의 데이터시트 빨리 읽기","tags":["optimization","data"]}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"optimization"}}}