{"componentChunkName":"component---src-templates-blog-js","path":"/2010/12/24/cpp-stl-fault","webpackCompilationHash":"b97af647db8cc3cf2682","result":{"data":{"markdownRemark":{"html":"<p>어제 나를 1시간동안 고민하게 한 코드는 다음과 같다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CMyData</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk11\">GetKey</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> { </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> m_nKey; }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">CMyData</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) {}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">~CMyData</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">void</span><span class=\"mtk1\">) {}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">private:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> m_nKey;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">std::list&lt;CMyData&gt; gCache;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">BOOL </span><span class=\"mtk11\">Find</span><span class=\"mtk1\"> (std::list&lt;CMyData&gt;&amp; </span><span class=\"mtk12\">list</span><span class=\"mtk1\">, </span><span class=\"mtk4\">int</span><span class=\"mtk1\"> </span><span class=\"mtk12\">key</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (std::list&lt;</span><span class=\"mtk4\">CMyData</span><span class=\"mtk1\">&gt;::iterator iterator = </span><span class=\"mtk12\">gCache.begin</span><span class=\"mtk1\"> ();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        iterator &lt; </span><span class=\"mtk12\">gCache.end</span><span class=\"mtk1\"> (); ++iterator) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">iterator-&gt;GetKey</span><span class=\"mtk1\"> () == key) </span><span class=\"mtk12\">list.push_back</span><span class=\"mtk1\"> (list);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">list.size</span><span class=\"mtk1\"> () != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>어제 정신이 없었다고 변명을 해도 너무 어이없는 실수를 저질렀는데 더 큰 문제는 컴파일에서 뱉어주는 에러를 보고도 해당 문제를 파악하지 못했다는 것이다.</p>\n<p>위 코드의 문제는</p>\n<ul>\n<li>나는 OOP 수업의 영향으로 class declaration에서 public - protected - private 순으로 선언을 하고, public method를 선언할 때 가장 마지막 부분에 생성자 소멸자를 선언한다. <strong>그런데 class 선언할 때 맨 앞에 public을 빼먹었다.</strong></li>\n</ul>\n<p><code>GetKey()</code> 접근 위반 에러를 먼저 봤다면 괜찮았을텐데, <code>std::list</code> 쪽에서 <code>CMyData</code>의 소멸자를 호출하지 못한다는 에러만 보고 <em>소멸자 제대로 선언했는데!</em>를 외쳤으나 <code>public:</code>이 빠진건 보지 못했다.</p>\n<ul>\n<li>stl container의 iterator를 사용할 때는 <code>begin</code>으로부터 시작해서 <code>end</code>가 아닐 때까지 반복하는거다. 그래서 당연히 <code>iterator != list.end();</code>으로 써야하는데 대체 무슨 정신으로 저기에다가 <code>operator &#x3C;</code>를 써놨는지 모르겠다.</li>\n</ul>\n<p>결론은 술먹고 코딩하는 것보다 졸면서 코딩하는게 100만배는 더 해롭다는 사실.<br>\n저거 잡는데 1시간 반정도가 걸렸는데, 사실 잠 깨는데 1시간 걸리고 30분 동안 내가 졸면서 뭘 짜고 있었는지 파악하는게 걸린것 같다.</p>\n<style class=\"vscode-highlight-styles\">:root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n.default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.default-dark .mtk1 { color: #D4D4D4; }\n.default-dark .mtk2 { color: #1E1E1E; }\n.default-dark .mtk3 { color: #6A9955; }\n.default-dark .mtk4 { color: #569CD6; }\n.default-dark .mtk5 { color: #D16969; }\n.default-dark .mtk6 { color: #D7BA7D; }\n.default-dark .mtk7 { color: #B5CEA8; }\n.default-dark .mtk8 { color: #CE9178; }\n.default-dark .mtk9 { color: #646695; }\n.default-dark .mtk10 { color: #4EC9B0; }\n.default-dark .mtk11 { color: #DCDCAA; }\n.default-dark .mtk12 { color: #9CDCFE; }\n.default-dark .mtk13 { color: #000080; }\n.default-dark .mtk14 { color: #F44747; }\n.default-dark .mtk15 { color: #C586C0; }\n.default-dark .mtk16 { color: #6796E6; }\n.default-dark .mtk17 { color: #808080; }\n.default-dark .mtki { font-style: italic; }\n.default-dark .mtkb { font-weight: bold; }\n.default-dark .mtku { text-decoration: underline; text-underline-position: under; }</style>","fields":{"date":"December 24, 2010","path":"/2010/12/24/cpp-stl-fault"},"frontmatter":{"title":"stl operator 실수","tags":["c++"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}