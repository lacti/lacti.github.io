{"componentChunkName":"component---src-templates-tag-tsx","path":"/tag/serverless/","result":{"data":{"allMarkdownRemark":{"totalCount":9,"edges":[{"node":{"excerpt":"예전 글에서 Serverless Web API와 함께 CRA로 만든 html bundle 파일을 serve하는 API를 만드는 법을 정리했다. 이번 글에서는 그 구조에서 발생할 수 있는 성능 문제와 해결법에 대해서 정리해보려 한다. Lambda의 수행 시간 API Gateway나 WebSocket API에 의해 Lambda가 실행되어 요청의 처리가 완료되기까지 다음과 같은 세 구간의 소요 시간이 존재한다. Lambda…","fields":{"date":"November 05, 2019","slug":"/2019/11/05/enhance-lambda-startup/"},"frontmatter":{"title":"Serverless + React로 알아보는 Lambda의 수행 시간 개선","tags":["aws","serverless","typescript","lambda"]}}},{"node":{"excerpt":"서버리스로 이런저런 서비스들을 계속 개발하다보면 닥치는 가장 큰 문제가, RestApi나 WebSocketApi는 쉽게 만들었는데 그에 대한 frontend를 제공해야 하는 경우에는 굉장히 귀찮은 과정을 겪어야 한다는 것이다. 보통 알려진 정상적인 방법은 다음과 같다. API를 API Gateway와 Lambda의 조합으로 배포하고, frontend 결과물을 S3에 업로드한 후 CloudFront에 연결해서 HTTPS…","fields":{"date":"October 05, 2019","slug":"/2019/10/05/serverless-html-bundle/"},"frontmatter":{"title":"Serverless로 React 서비스하기","tags":["aws","serverless","typescript","react"]}}},{"node":{"excerpt":"AWS X-Ray는 AWS가 제공하는 tracing solution이다. AWS X-Ray는 개발자가 마이크로 서비스 아키텍처를 사용해 구축된 애플리케이션과 같은 프로덕션 분산 애플리케이션을 분석하고 디버그하는 데 도움이 됩니다. X-Ray를 사용해 자신이 개발한 애플리케이션과 기본 서비스가 성능 문제와 오류의 근본 원인 식별과 문제 해결을 올바로 수행하는지 파악할 수 있습니다. X-Ray…","fields":{"date":"October 01, 2019","slug":"/2019/10/01/hello-serverless-xray-typescript/"},"frontmatter":{"title":"Serverless + X-Ray + TypeScript","tags":["aws","serverless","xray","typescript"]}}},{"node":{"excerpt":"천성이 백엔드 개발자라서 그런지 개인적으로 토이 프로젝트를 해도 꼭 서버가 들어가는 경우가 더 많다. 이런 시스템들을 단순히 코드 형태로 GitHub에만 보관하는 것은 아무래도 좀 아쉬워서 혹시 생각날 때 바로 접속해볼 수 있게 늘 띄워놓고 싶은데 아무래도 비용이 만만치 않다. Docker로 구워두고 필요할 때마다 compose up…","fields":{"date":"August 16, 2019","slug":"/2019/08/16/actor-model-on-aws-lambda/"},"frontmatter":{"title":"AWS Lambda와 Actor model","tags":["aws","serverless","lambda","actor"]}}},{"node":{"excerpt":"AWS Lambda에서 실행하기 위한 분산 ActorSystem을 개발하고 있다. 처음에는 단순히 actor의 state를 Redis나 S3에 기록하고 Redis를 기반으로 작성된 Queue와 Lock으로 메시지를 교환하면 될 것이라고 생각하고 열심히 만들고 있었다. 하지만 이 모든 것은 actor간 Delayed Message를 교환해야 할 필요가 있는 시점에서 문제가 발생했다. actor…","fields":{"date":"August 12, 2019","slug":"/2019/08/12/set-timeout-on-aws-lambda/"},"frontmatter":{"title":"AWS Lambda에서의 setTimeout","tags":["aws","serverless","auth"]}}},{"node":{"excerpt":"…","fields":{"date":"August 08, 2019","slug":"/2019/08/08/aws-lambda-to-compile-cpp/"},"frontmatter":{"title":"AWS Lambda로 cpp 파일 컴파일","tags":["aws","serverless","lambda"]}}},{"node":{"excerpt":"API Gateway와 Lambda Proxy를 사용하여 간단한 HTTP/s API나 WebSocket API를 구축할 수 있다. AWS CloudFormation을 직접 사용하여 서비스를 구성할 수도 있고, 최근에 나온 aws-cdk을 사용하여 구성할 수도 있다. 물론 Serverless framework과 같이 vendor 종속적이지 않은 framework…","fields":{"date":"August 01, 2019","slug":"/2019/08/01/api-gateway-custom-authorizer/"},"frontmatter":{"title":"API Gateway의 인증을 위한 Custom Authroizer 사용하기","tags":["aws","serverless","auth"]}}},{"node":{"excerpt":"웹 채팅 서비스를 만들어본다고 생각해보자. 물론 저기에는 수많은 기능이 있겠지만 다 떼어내고 가장 기본적인 기능인, Web interface를 통해서 사용자와 운영자가 실시간으로 채팅을 할 수 있는 부분을 만든다고 생각을 해보자. 일단 클라이언트의 HTTP 요청에 대해 서버에서 응답하는 구조인 HTTP…","fields":{"date":"July 07, 2019","slug":"/2019/07/07/websocket-api/"},"frontmatter":{"title":"AWS WebSocket API 써보기","tags":["aws","server","serverless"]}}},{"node":{"excerpt":"작년에 참가하지 못했던 serverless gaming on aws을 올해는 드디어 참가할 수가 있었다. 개인적으로 행사에 대한 참가 소회를 생생하게 밝힐 자신은 없으므로 같이 참가했던 분의 글을 소개하는 것으로 넘어가려고 한다. 2015년: Serverless 실시간 대전게임 2016년: Gaming on AWS Hackathon 참가 후기 game-server-less 나는 game programming에 있어서 unity…","fields":{"date":"September 26, 2016","slug":"/2016/09/26/aws-serverless-hackathon-2016/"},"frontmatter":{"title":"aws serverless hackathon 2016","tags":["aws","serverless"]}}}]}},"pageContext":{"tag":"serverless"}}}