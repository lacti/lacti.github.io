{"componentChunkName":"component---src-templates-tag-tsx","path":"/tag/os/","result":{"data":{"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"excerpt":"Pintos를 구동시키기 위해서는 먼저 가상 에뮬레이터가 필요하다. Open source 중에 대표적으로 Bochs와 QEMU가 있는데, 설치법이 과제 문서에 기술되어있는 Bochs를 선택하여 설치하였다. Bochs는 Open Source 프로젝트로 Sourceforge에서 그 소스를 다운받아 컴파일하여 설치할 수 있다. 파일을 받기 위해서 Sourceforge에 lynx로 접속하여 bochs-2.3.tar.gz…","fields":{"date":"April 01, 2008","slug":"/2008/04/01/make-pintos-environment/"},"frontmatter":{"title":"pintos 환경 구축","tags":["os"]}}},{"node":{"excerpt":"Pintos의 기본 구조 Pintos는 가장 기본 기능인 threads를 중심으로 user program, virtual memory, 그리고 file system을 추가하는 구조를 갖는다. 그래서 소스 코드의 분포 역시 기본적인 것들은 threads 디렉토리에 다 있고, 그 밖의 것들은 각각의 디렉토리에 존재하면서 threads에 있는 소스 코드를 참조하는 식으로 되어있다. 그리고 Pintos…","fields":{"date":"April 01, 2008","slug":"/2008/04/01/pintos-internal-structure/"},"frontmatter":{"title":"pintos 기본 구조와 동작 원리","tags":["os"]}}},{"node":{"excerpt":"우리가 일반적으로 사용하는 컴퓨터 내에 존재하는 시스템은 하드 디스크 등의 보조 기억 공간을 갖고 그 기억 공간에 접근하여 동작을 수행하는데, Pintos를 수행하는 bochs는 Pintos를 빌드하여 얻어진 이미지 파일을 하드 디스크 등과 같은 storage로 인식하여 emulating을 수행한다. 하지만 Pintos는 단순히 커널만 존재하기 때문에 우리가 일반적으로 사용하는 storage…","fields":{"date":"April 01, 2008","slug":"/2008/04/01/pintos-boot/"},"frontmatter":{"title":"pintos 부팅 과정","tags":["os"]}}}]}},"pageContext":{"tag":"os"}},"staticQueryHashes":["848695393"]}