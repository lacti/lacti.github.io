{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["StyledTitle","TagsTemplate","tag","pageContext","data","allMarkdownRemark","edges","totalCount","items","map","node","excerpt","fields","date","slug","frontmatter","title","tags","pageQuery"],"mappings":"oOASMA,EAAc,kBAAH,mBAAG,CAAH,uDAuDFC,UA1B4B,SAAC,GAAD,IAC1BC,EAD0B,EACzCC,YAAeD,IAD0B,IAEzCE,KACEC,kBAAqBC,EAHkB,EAGlBA,MAAOC,EAHW,EAGXA,WAHW,OAMzC,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAACP,EAAD,KAAiBO,EAAjB,sBAAiDL,GACjD,YAAC,IAAD,CACEM,MAAOF,EAAMG,KACX,oBACEC,KACEC,EAFJ,EAEIA,QAFJ,IAGIC,OAAUC,EAHd,EAGcA,KAAMC,EAHpB,EAGoBA,KAHpB,IAIIC,YAJJ,MAMO,CAAEJ,UAASE,OAAMC,OAAME,MAN9B,EAImBA,MAEkBC,KANrC,EAI0BA,eAY/B,IAAMC,EAAY","file":"component---src-templates-tag-tsx-a7272ddf1dd94b27f286.js","sourcesContent":["import styled from \"@emotion/styled\";\nimport * as React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Page from \"../components/Page\";\nimport Container from \"../components/Container\";\nimport IndexLayout from \"../layouts\";\nimport PostList from \"../components/PostList\";\n\nconst StyledTitle = styled.h3`\n  margin: 0;\n  margin-bottom: 2rem;\n`;\n\ninterface TagsProps {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: {\n          excerpt: string;\n          fields: {\n            slug: string;\n            date: string;\n          };\n          frontmatter: {\n            title: string;\n            tags: string[];\n          };\n        };\n      }[];\n    };\n  };\n}\n\nconst TagsTemplate: React.SFC<TagsProps> = ({\n  pageContext: { tag },\n  data: {\n    allMarkdownRemark: { edges, totalCount }\n  }\n}) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <StyledTitle>{`${totalCount} posts tagged with ${tag}`}</StyledTitle>\n        <PostList\n          items={edges.map(\n            ({\n              node: {\n                excerpt,\n                fields: { date, slug },\n                frontmatter: { title, tags }\n              }\n            }) => ({ excerpt, date, slug, title, tags })\n          )}\n        />\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default TagsTemplate;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 240)\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          frontmatter {\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}