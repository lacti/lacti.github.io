{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/utils/tags.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/item.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_item__WEBPACK_IMPORTED_MODULE_4__","IndexPage","_ref","edges","data","allMarkdownRemark","a","createElement","title","className","map","_ref2","_ref2$node","node","excerpt","_ref2$node$fields","fields","path","date","_ref2$node$frontmatte","frontmatter","tags","key","propTypes","PropTypes","shape","arrayOf","string","isRequired","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","asTagPath","tag","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear","href","gatsby__WEBPACK_IMPORTED_MODULE_2__","_utils_tags__WEBPACK_IMPORTED_MODULE_3__","Item"],"mappings":"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","file":"component---src-pages-index-js-a4bb75262713aa902002.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Item from \"../components/item\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <ul className=\"post-list\">\n      {edges.map(\n        ({\n          node: {\n            excerpt,\n            fields: { path, date },\n            frontmatter: { title, tags },\n          },\n        }) => (\n          <Item\n            key={path}\n            excerpt={excerpt}\n            path={path}\n            date={date}\n            title={title}\n            tags={tags}\n          />\n        )\n      )}\n    </ul>\n  </Layout>\n)\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n            }),\n            fields: PropTypes.shape({\n              path: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [fields___date] }\n      limit: 2000\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 240)\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n          frontmatter {\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/*\n * This function would be referenced from `gatsby-node.js`\n * so it cannot use ES6 module syntax to export.\n */\nmodule.exports.asTagPath = tag => {\n  switch (tag) {\n    case \"c++\":\n      return \"cplusplus\"\n    case \"c#\":\n      return \"csharp\"\n    default:\n      return tag\n  }\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ title, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={title || data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { asTagPath } from \"../utils/tags\"\n\nconst Item = ({ excerpt, path, date, title, tags }) => (\n  <li className=\"post-item\">\n    <Link to={path} title={excerpt}>\n      <h1>{title}</h1>\n    </Link>\n    <div>\n      <h2 className=\"post-item-date\">{date}</h2>\n      {tags.map(tag => (\n        <div key={`${path}_${tag}`} className=\"chip\">\n          <Link to={`/tags/${asTagPath(tag)}`}>{tag}</Link>\n        </div>\n      ))}\n    </div>\n    <p>{excerpt}</p>\n  </li>\n)\n\nItem.propTypes = {\n  excerpt: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Item\n"],"sourceRoot":""}