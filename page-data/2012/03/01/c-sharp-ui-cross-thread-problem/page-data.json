{"componentChunkName":"component---src-templates-page-tsx","path":"/2012/03/01/c-sharp-ui-cross-thread-problem/","webpackCompilationHash":"551181b12e79e57a3ef2","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p>다른 Thread에서 UI component에 접근하려면 문제가 발생한다. (cross thread)\n동기화 이슈에서보면 당연한 이야기니 바로 해결책을 보자.</p>\n<p><code>System.Windows.Forms.Control</code>에는 <code>Invoke</code>라는 UI thread로 작업을 delegate하는 method가 있다.이 녀석은 Delegate 를 받아서 그걸 내부에서 수행해주는데, C#에서는 어차피 외부 변수 capture를 자동으로 해주므로 간단히 다음과 같이 쓰면 된다.</p>\n<pre class=\"default-dark vscode-highlight\" data-language=\"csharp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk11\">Invoke</span><span class=\"mtk1\">(</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MethodInvoker</span><span class=\"mtk1\">(</span><span class=\"mtk4\">delegate</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// code for running in ui thread</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}));</span></span></code></pre>\n<p>그러면 delegate 내부의 내용은 UI thread에서 수행되므로 문제가 없다.</p>\n<p>더 예전 버전의 C#은 직접 method를 만들어서 등록해주어야했지만 2.0이후부터는 delegate로 익명 함수자 생성이 가능하므로 문법이 좀 간단해졌다. (C# 4.0부터는 lambda를 지원하니까 문법이 더 간단해지지 않았나?)</p>\n<style class=\"vscode-highlight-styles\">:root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n.default-dark {\nbackground-color: #1E1E1E;\ncolor: #D4D4D4;\n}\n\n.default-dark .mtk1 { color: #D4D4D4; }\n.default-dark .mtk2 { color: #1E1E1E; }\n.default-dark .mtk3 { color: #6A9955; }\n.default-dark .mtk4 { color: #569CD6; }\n.default-dark .mtk5 { color: #D16969; }\n.default-dark .mtk6 { color: #D7BA7D; }\n.default-dark .mtk7 { color: #B5CEA8; }\n.default-dark .mtk8 { color: #CE9178; }\n.default-dark .mtk9 { color: #646695; }\n.default-dark .mtk10 { color: #4EC9B0; }\n.default-dark .mtk11 { color: #DCDCAA; }\n.default-dark .mtk12 { color: #9CDCFE; }\n.default-dark .mtk13 { color: #000080; }\n.default-dark .mtk14 { color: #F44747; }\n.default-dark .mtk15 { color: #C586C0; }\n.default-dark .mtk16 { color: #6796E6; }\n.default-dark .mtk17 { color: #808080; }\n.default-dark .mtki { font-style: italic; }\n.default-dark .mtkb { font-weight: bold; }\n.default-dark .mtku { text-decoration: underline; text-underline-position: under; }</style>","excerpt":"다른 Thread에서 UI component에 접근하려면 문제가 발생한다. (cross thread)\n동기화 이슈에서보면 당연한 이야기니 바로 해결책을 보자. System.Windows.Forms.Control에는 Invoke라는 UI thread…","fields":{"date":"March 01, 2012","shortdesc":""},"frontmatter":{"title":"C# UI Cross thread problem 해결","tags":["c#"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2012/03/01/c-sharp-ui-cross-thread-problem/"}}}