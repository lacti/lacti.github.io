{"componentChunkName":"component---src-templates-page-tsx","path":"/2010/12/18/LockWindowUpdate/","result":{"data":{"site":{"siteMetadata":{"title":"Lacti's Archive","description":"All about I learned","author":{"name":"Jaeyoung, Choi","url":"https://twitter.com/lacti"}}},"markdownRemark":{"html":"<p>Win32 혹은 MFC를 하다보면<br>\n어떤 창 내에 여러 Child Window가 존재하고, 또, 해당 DC를 얻어서 그림을 그려야하는 경우가 생긴다.</p>\n<p>이들이 모두 변경되는 경우, 즉 그림도 변경되고 Child Window도 <code>SetWindowPos</code> 등의 함수를 통해 변경될 경우에\n그림은 <code>InvalidateRect()</code> 등의 함수에 의해 다시 그려질 것이나<br>\nChild Window는 <code>SetWindowPos</code>나 <code>ShowWindow</code>함수가 호출되는 즉시 변경이 되기 때문에 UI가 <strong>한번에 갱신되지 않고 지역별로 갱신되는 문제</strong>가 발생한다.</p>\n<p>이를 동기화하려면 부모 Window의 <code>WM_PAINT</code> 메시지와 Child Window의 <code>WM_PAINT</code>가 동기적으로 일어나야 한다.\n하지만 어차피 부모 Window <code>WM_PAINT</code> 수행될 때 InvalidateRect 영역 내에 있는 Child의 Window에 대해서도 <code>WM_PAINT</code>가 다 수행되므로 개별 UI만 갱신되지 않도록 막아주면 된다.</p>\n<p>따라서,</p>\n<ul>\n<li><code>LockWindowUpdate</code> 함수를 통해 부모 Window에 Lock을 걸어 Child Window가 수정되어도 <code>WM_PAINT</code> 가 수행되는 것을 막고</li>\n<li>모든 작업이 끝난 후에 <code>LockWindowUpdate(NULL)</code>을 호출하여 <code>UpdateWindow</code>를 수행해 줌으로써 화면을 갱신해주면 되겠다.</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","excerpt":"Win32 혹은 MFC를 하다보면 어떤 창 내에 여러 Child Window가 존재하고, 또, 해당 DC를 얻어서 그림을 그려야하는 경우가 생긴다. 이들이 모두 변경되는 경우, 즉 그림도 변경되고 Child Window도 SetWindowPos…","fields":{"date":"December 18, 2010","shortdesc":"","slug":"/2010/12/18/LockWindowUpdate/"},"frontmatter":{"title":"LockWindowUpdate","tags":["c++"]}}},"pageContext":{"slug":"/2010/12/18/LockWindowUpdate/","older":{"slug":"/2010/12/03/as-you-know-utf8-unicode-ci/","title":"as you know, utf8_unicode_ci"},"newer":{"slug":"/2010/12/21/debian-db-recovery/","title":"debian 계열 db 덮어쓸 때 주의점"}}},"staticQueryHashes":["848695393"]}